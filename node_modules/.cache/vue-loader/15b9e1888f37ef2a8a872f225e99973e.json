{"remainingRequest":"D:\\inventarioInformatico\\inventario\\inventario\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\inventarioInformatico\\inventario\\inventario\\src\\views\\funcionario.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\inventarioInformatico\\inventario\\inventario\\src\\views\\funcionario.vue","mtime":1645451438668},{"path":"D:\\inventarioInformatico\\inventario\\inventario\\node_modules\\css-loader\\dist\\cjs.js","mtime":1644510056270},{"path":"D:\\inventarioInformatico\\inventario\\inventario\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1644510072741},{"path":"D:\\inventarioInformatico\\inventario\\inventario\\node_modules\\postcss-loader\\src\\index.js","mtime":1644510064515},{"path":"D:\\inventarioInformatico\\inventario\\inventario\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644510051457},{"path":"D:\\inventarioInformatico\\inventario\\inventario\\node_modules\\vue-loader\\lib\\index.js","mtime":1644510072741}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1lbnV7CiAgcGFkZGluZzogMzBweDsKfQoKYm9keXsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlOwp9CgouYm90b257CiAgbWFyZ2luOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYm9yZGVyLXJhZGl1czogMTJweDsKICBib3JkZXItY29sb3I6IGJsYWNrOwp9Cg=="},{"version":3,"sources":["funcionario.vue"],"names":[],"mappingskoBA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"funcionario.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"about\">\r\n    <navbar />\r\n    <b-container>\r\n        <div class=\"menu\">\r\n            <h1 v-if=\"pestaña === 'funcionarios'\">Listado de funcionarios</h1>\r\n            <h1 v-if=\"pestaña === 'agregar'\">Agrega un Funcionario</h1>\r\n            <h1 v-if=\"pestaña === 'historial'\">Historial del Funcionario</h1>\r\n            <h1 v-if=\"pestaña === 'actuales'\">Equipos actuales del Funcionario</h1>\r\n            <h1 v-if=\"pestaña === 'editar'\">Editar Funcionario</h1>\r\n            <b-alert\r\n              :show=\"dismissCountDown\"\r\n              dismissible\r\n              :variant=\"mensaje.color\"\r\n              @dismissed=\"dismissCountDown=0\"\r\n              @dismiss-count-down=\"countDownChanged\"\r\n              >\r\n              {{mensaje.texto}}\r\n            </b-alert>  \r\n            <br>\r\n            <!-- Boton para ir a agregar un Funcionario -->\r\n            <div class=\"row\">\r\n              <b-button @click=\"agregar()\" class=\"btn-success botonAgregar\" style=\"border-color: black;\" v-if=\"pestaña === 'funcionarios'\">Agregar Funcionario</b-button>\r\n            </div><br>\r\n            <!-- Listado de Funcionarios -->\r\n            <div class=\"row\">\r\n                <table id='funcionarios' class=\"table table-striped table-dark table-responsive-lg table-responsive-md\" v-if=\"pestaña === 'funcionarios'\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Codigo</th>\r\n                      <th scope=\"col\">Nombre</th>\r\n                      <th scope=\"col\">Codigo de Funcionario</th>\r\n                      <th scope=\"col\">Rut</th>\r\n                      <th scope=\"col\">Correo</th>\r\n                      <th scope=\"col\">Editar</th>\r\n                      <th scope=\"col\">Historial</th>\r\n                      <th scope=\"col\">Equipos Actuales</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr v-for=\"i in funcionarios\" :key=\"i.codigo\">\r\n                      <td scope=\"row\">{{i.codigo}}</td>\r\n                      <td>{{i.nombre}}</td>\r\n                      <td>{{i.codFuncionario}}</td>\r\n                      <td>{{i.rut}}</td>\r\n                      <td>{{i.correo}}</td>\r\n                      <td>\r\n                        <b-button @click=\"Acteditar(i.codigo)\" class=\"btn-warning btn-sm\" style=\"border-color: white;\">Editar</b-button>\r\n                      </td>\r\n                      <td>\r\n                        <b-button @click=\"ActHistorial(i.codigo)\" class=\"btn-sm\" style=\"border-color: white;\">Historial</b-button>\r\n                      </td>\r\n                      <td>\r\n                        <b-button @click=\"EquiposActuales(i.codigo)\" class=\"btn-success btn-sm\" style=\"border-color: white;\">Equipos Actuales</b-button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <br v-if=\"pestaña === 'funcionarios'\"><div class=\"mb-1\">\r\n                  <b-button @click=\"exportar(3)\" v-if=\"pestaña === 'funcionarios'\" class=\"btn-success boton\">Exportar</b-button>\r\n                </div>\r\n            </div>\r\n          <!-- Agregar un funcionario -->\r\n          <div class=\"card\" v-if=\"pestaña === 'agregar'\" style=\"border-color: black;\">\r\n               <div class=\"card-body\">\r\n                 <b-row>\r\n                   <b-col cols=\"12\" md=\"12\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"exampleInputEmail1\" class=\"form-label\">Codigo Principal del Funcionario</label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"codigoAgrega\" aria-describedby=\"emailHelp\" v-model=\"$v.codigo.$model\">\r\n                      <p class=\"text-danger\" v-if=\"$v.codigo.$error\">Es necesario ingresar un codigo</p>\r\n                    </div>\r\n                  </b-col>\r\n                 </b-row>\r\n                 <b-row>\r\n                  <b-col cols=\"12\" md=\"6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"exampleInputEmail1\" class=\"form-label\">Codigo Funcionario</label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"codFuncionarioAgrega\" aria-describedby=\"emailHelp\" v-model=\"$v.codigoFuncionarioAgregar.$model\">\r\n                      <p class=\"text-danger\" v-if=\"$v.codigoFuncionarioAgregar.$error\">Es necesario ingresar un codigo</p>\r\n                    </div>\r\n                  </b-col>\r\n                  <b-col cols=\"12\" md=\"6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"exampleInputEmail1\" class=\"form-label\">Nombre del Funcionario</label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"nomFuncionarioAgrega\" aria-describedby=\"emailHelp\" v-model=\"$v.nomFuncionarioAgregar.$model\">\r\n                      <p class=\"text-danger\" v-if=\"$v.nomFuncionarioAgregar.$error\">Es necesario ingresar un nombre</p>\r\n                    </div>\r\n                  </b-col>\r\n                  </b-row>\r\n                  <b-row>\r\n                    <b-col cols=\"12\" md=\"6\">\r\n                      <div class=\"mb-3\">\r\n                        <label for=\"exampleInputEmail1\" class=\"form-label\">Correo del Funcionario</label>\r\n                        <input type=\"email\" class=\"form-control\" id=\"correoAgrega\" aria-describedby=\"emailHelp\" v-model=\"$v.correoAgregar.$model\">\r\n                        <p class=\"text-danger\" v-if=\"$v.correoAgregar.$error\">Por favor ingrese un email</p>\r\n                      </div>\r\n                    </b-col>\r\n                    <b-col cols=\"12\" md=\"6\">\r\n                      <div class=\"mb-3\">\r\n                        <label for=\"exampleInputEmail1\" class=\"form-label\">Rut del Funcionario</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"rutAgrega\" aria-describedby=\"emailHelp\" v-model=\"$v.rutAgregar.$model\">\r\n                        <p class=\"text-danger\" v-if=\"$v.rutAgregar.$error\">Es necesario ingresar un rut</p>\r\n                      </div>\r\n                    </b-col>\r\n                </b-row>\r\n                <br>\r\n                <b-row>\r\n                  <b-col cols=\"12\" md=\"6\">\r\n                    <button type=\"submit\" @click=\"agregarFuncionario()\" class=\"btn btn-success m-3 boton\">Agregar Funcionario</button>\r\n                  </b-col>\r\n                  <b-col cols=\"12\" md=\"6\">\r\n                    <button type=\"submit\" @click=\"Volver()\" class=\"btn btn-primary boton\">Volver al Listado</button>\r\n                  </b-col>\r\n                </b-row>\r\n            </div>\r\n          </div>\r\n          <!-- Editar un funcionario -->\r\n          <div class=\"card\" v-if=\"pestaña === 'editar'\" style=\"border-color: black;\">\r\n               <div class=\"card-body\">\r\n                 <b-row>\r\n                  <b-col cols=\"12\" md=\"6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"exampleInputEmail1\" class=\"form-label\">Codigo Funcionario</label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"codFuncionarioEdita\" aria-describedby=\"emailHelp\" v-model=\"$v.codigoFuncionario.$model\">\r\n                      <p class=\"text-danger\" v-if=\"$v.codigoFuncionario.$error\">Es necesario ingresar un codigo</p>\r\n                    </div>\r\n                  </b-col>\r\n                  <b-col cols=\"12\" md=\"6\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"exampleInputEmail1\" class=\"form-label\">Nombre del Funcionario</label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"nomFuncionarioEdita\" aria-describedby=\"emailHelp\" v-model=\"$v.nomFuncionario.$model\">\r\n                      <p class=\"text-danger\" v-if=\"$v.nomFuncionario.$error\">Es necesario ingresar un nombre</p>\r\n                    </div>\r\n                  </b-col>\r\n                  </b-row>\r\n                  <b-row>\r\n                    <b-col cols=\"12\" md=\"6\">\r\n                      <div class=\"mb-3\">\r\n                        <label for=\"exampleInputEmail1\" class=\"form-label\">Correo del Funcionario</label>\r\n                        <input type=\"email\" class=\"form-control\" id=\"correoEdita\" aria-describedby=\"emailHelp\" v-model=\"$v.correo.$model\">\r\n                        <p class=\"text-danger\" v-if=\"$v.correo.$error\">Por favor ingrese un email</p>\r\n                      </div>\r\n                    </b-col>\r\n                    <b-col cols=\"12\" md=\"6\">\r\n                      <div class=\"mb-3\">\r\n                        <label for=\"exampleInputEmail1\" class=\"form-label\">Rut del Funcionario</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"rutEdita\" aria-describedby=\"emailHelp\" v-model=\"$v.rut.$model\">\r\n                        <p class=\"text-danger\" v-if=\"$v.rut.$error\">Es necesario ingresar un rut</p>\r\n                      </div>\r\n                    </b-col>\r\n                </b-row>\r\n                <br>\r\n                <b-row>\r\n                  <b-col cols=\"12\" md=\"6\">\r\n                    <button type=\"submit\" @click=\"editarFuncionario()\" class=\"btn btn-success m-3 boton\">Editar Funcionario</button>\r\n                  </b-col>\r\n                  <b-col cols=\"12\" md=\"6\">\r\n                    <button type=\"submit\" @click=\"Volver()\" class=\"btn btn-primary boton\">Volver al Listado</button>\r\n                  </b-col>\r\n                </b-row>\r\n            </div>\r\n          </div>\r\n          <!-- Historial del funcionario -->\r\n          <div class=\"row\">\r\n            <b-button @click=\"Volver()\" class=\"botonAgregar\" v-if=\"pestaña === 'historial'\" style=\"border-color: black;\">Volver al listado de Funcionarios</b-button>\r\n          </div><br v-if=\"pestaña === 'historial'\">\r\n          <div class=\"row\">\r\n              <div class=\"table-responsive\">\r\n                  <table id='historialfuncionarios' class=\"table table-striped table-dark table-responsive-lg table-responsive-md\" v-if=\"pestaña === 'historial'\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">Id</th>\r\n                        <th scope=\"col\">Codigo Equipo</th>\r\n                        <th scope=\"col\">Tipo de Equipo</th>\r\n                        <th scope=\"col\">N° Serie</th>\r\n                        <th scope=\"col\">Modelo</th>\r\n                        <th scope=\"col\">Marca</th>\r\n                        <th scope=\"col\">Dependencia</th>\r\n                        <th scope=\"col\">Desde</th>\r\n                        <th scope=\"col\">Hasta</th>\r\n                        <th scope=\"col\">Zona</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr v-for=\"i in historial\" :key=\"i.codHistorial\">\r\n                        <td scope=\"row\">{{i.codHistorial}}</td>\r\n                        <td>{{i.codEquipo}}</td>\r\n                        <td>{{i.tipoEquipo}}</td>\r\n                        <td>{{i.serie}}</td>\r\n                        <td>{{i.modelo}}</td>\r\n                        <td>{{i.nomMarca}}</td>\r\n                        <td>{{i.nomJardin}}</td>\r\n                        <td>{{i.fechaInicio}}</td>\r\n                        <td>{{i.fecha}}</td>\r\n                        <td>{{i.zona}}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <br v-if=\"pestaña === 'historial'\"><div class=\"mb-1\">\r\n                  <b-button @click=\"exportar(2)\" v-if=\"pestaña === 'historial'\" class=\"btn-success boton\">Exportar</b-button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          <!-- Equipos Actuales del funcionario -->  \r\n          <div class=row>\r\n            <b-button @click=\"Volver()\" class=\"botonAgregar\" v-if=\"pestaña === 'actuales'\" style=\"border-color: black;\">Volver al listado de Funcionarios</b-button>\r\n          </div><br v-if=\"pestaña === 'actuales'\">\r\n          <div class=\"row\">\r\n                <table id='actualesfuncionarios' class=\"table table-striped table-dark table-responsive-lg table-responsive-md\" v-if=\"pestaña === 'actuales'\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Id</th>\r\n                      <th scope=\"col\">Codigo Equipo</th>\r\n                      <th scope=\"col\">Tipo de Equipo</th>\r\n                      <th scope=\"col\">N° Serie</th>\r\n                      <th scope=\"col\">Modelo</th>\r\n                      <th scope=\"col\">Marca</th>\r\n                      <th scope=\"col\">Dependencia</th>\r\n                      <th scope=\"col\">Zona</th>\r\n                      <th scope=\"col\" v-if=\"activo\">Quitar Equipo</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr v-for=\"i in equiposAct\" :key=\"i.codHistorial\">\r\n                      <td scope=\"row\">{{i.codHistorial}}</td>\r\n                      <td>{{i.codEquipo}}</td>\r\n                      <td>{{i.tipoEquipo}}</td>\r\n                      <td>{{i.serie}}</td>\r\n                      <td>{{i.modelo}}</td>\r\n                      <td>{{i.nomMarca}}</td>\r\n                      <td>{{i.nomJardin}}</td>\r\n                      <td>{{i.zona}}</td>\r\n                      <td v-if=\"activo\">\r\n                        <b-button @click=\"quitar(i.codHistorial)\" class=\"btn-danger btn-sm\" style=\"border-color: white;\">Quitar</b-button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <br v-if=\"pestaña === 'actuales'\"><div class=\"mb-1\">\r\n                  <b-button @click=\"exportar(1)\" v-if=\"pestaña === 'actuales'\" class=\"btn-success boton\">Exportar</b-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </b-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport navbar from \"../components/navbar.vue\";\r\nimport { required, email } from \"vuelidate/lib/validators\";\r\nimport 'jquery/dist/jquery.min.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport $ from 'jquery'; \r\n\r\nimport * as XLSX from 'xlsx/xlsx.mjs';\r\n\r\n/* load 'fs' for readFile and writeFile support */\r\nimport * as fs from 'fs';\r\nXLSX.set_fs(fs);\r\n\r\n/* load the codepage support library for extended support with older formats  */\r\nimport * as cpexcel from 'xlsx/dist/cpexcel.full.mjs';\r\nXLSX.set_cptable(cpexcel);\r\n\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  name: \"about\",\r\n  components: {\r\n    navbar,\r\n  },\r\n  data() {\r\n      return {\r\n        //Listas utilizadas para el manejo de tablas\r\n        equiposAct: [],\r\n        historial: [],\r\n        funcionarios: [],\r\n        //Pestaña que indica la vista actual\r\n        pestaña: 'funcionarios',\r\n        //Variables para agregar un nuevo funcionario con v-model\r\n        codigo: '',\r\n        codigoFuncionarioAgregar: '',\r\n        nomFuncionarioAgregar: '',\r\n        correoAgregar: '',\r\n        rutAgregar: '',\r\n        //Variables para editar un funcionario con v-model\r\n        codigoEditar: '',\r\n        codigoFuncionario: '',\r\n        nomFuncionario: '',\r\n        correo: '',\r\n        rut: '',\r\n        //Variables de las alertas\r\n        dismissSecs: 5,\r\n        dismissCountDown: 0,\r\n        mensaje: {color: '', texto: ''},\r\n        activo: true\r\n      }\r\n    },\r\n    validations:{\r\n      //Validaciones de los input\r\n      codigo:{required},\r\n      codigoFuncionarioAgregar:{required},\r\n      nomFuncionarioAgregar:{required},\r\n      correoAgregar:{required, email},\r\n      rutAgregar:{required},\r\n      codigoFuncionario:{required},\r\n      nomFuncionario:{required},\r\n      correo:{required, email},\r\n      rut:{required}\r\n    },\r\n    computed: {\r\n      ...mapState(['token', 'usuarioDB'])\r\n    },\r\n    created(){\r\n      //Iniciamos las funciones que se encargan de cargar los datos apenas se inicie la ruta\r\n      this.listarFuncionarios();\r\n      this.verificar();\r\n    },\r\n    methods: {\r\n      exportar(num) {\r\n        let data = [];\r\n        var filename = \"planilla\";\r\n        if(num === 1){\r\n          var arreglado = this.equiposAct.map( item => { \r\n            return { ID: item.codHistorial , CodigoEquipo : item.codEquipo, Tipo : item.tipoEquipo, Serie : item.serie, Modelo : item.modelo, Marca : item.nomMarca, Dependencia : item.nomJardin, Zona : item.zona}; \r\n          });\r\n          data = XLSX.utils.json_to_sheet(arreglado);\r\n          filename = 'Equipos del Usuario ' + this.codigoEditar\r\n        }else if(num === 2){\r\n          var arreglado = this.historial.map( item => { \r\n            return { ID: item.codHistorial , CodigoEquipo : item.codEquipo, Tipo : item.tipoEquipo, Serie : item.serie, Modelo : item.modelo, Marca : item.nomMarca, Dependencia : item.nomJardin, Desde : item.fechaInicio, Hasta : item.fecha, Zona : item.zona};\r\n          });\r\n          data = XLSX.utils.json_to_sheet(arreglado);\r\n          filename = 'Historial del Usuario' + this.codigoEditar\r\n        }else if(num === 3){\r\n          var arreglado = this.funcionarios.map( item => { \r\n            return { Codigo: item.codigo , Nombre : item.nombre, CodigoFuncionario : item.codFuncionario, Rut : item.rut,  Correo : item.correo}; \r\n          });\r\n          data = XLSX.utils.json_to_sheet(arreglado);\r\n          filename = 'Funcionarios'\r\n        }\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, data, filename);\r\n        XLSX.writeFile(workbook, `${filename}.xlsx`);\r\n      },\r\n\r\n      verificar(){\r\n        if(this.usuarioDB.data[0].tipoUsuario == 0){\r\n          this.activo = false;\r\n        }\r\n      },\r\n    //Función que obtiene los datos de los funcionarios y los enviar al arreglo que cargara la tabla\r\n      listarFuncionarios(){\r\n        let config = {\r\n          headers: {\r\n            token: this.token\r\n          }\r\n        }\r\n        this.axios.get('api/funcionarios', config)\r\n          .then(res => {\r\n            this.funcionarios = res.data;\r\n          })\r\n          .catch(e => {\r\n            this.alerta('danger', 'No se han podido cargar a los funcionarios');\r\n          })\r\n      },\r\n      //Muestra el historial de equipos del funcionario\r\n      listarHistorial(){\r\n        let config = {\r\n          headers: {\r\n            token: this.token\r\n          }\r\n        }\r\n        this.axios.get(`api/Histfuncionario/${this.codigoEditar}`, config)\r\n          .then(res => {\r\n            this.historial = res.data;\r\n          })\r\n          .catch(e => {\r\n            this.alerta('danger', 'No se ha logrado obtener el historial deseado');\r\n          })\r\n      },\r\n      //Lista los datos de los equipos de los que un funcionario es dueño\r\n      listarActuales(){\r\n        let config = {\r\n          headers: {\r\n            token: this.token\r\n          }\r\n        }\r\n        this.axios.get(`api/Actfuncionario/${this.codigoEditar}`, config)\r\n          .then(res => {\r\n            this.equiposAct = res.data;\r\n          })\r\n          .catch(e => {\r\n            this.alerta('danger', 'No se ha logrado obtener los equipos que ocupa el funcionario');\r\n          })\r\n      },\r\n      //Función que determina la vista de edición de funcionarios\r\n      Acteditar(codigo){\r\n        this.pestaña = 'editar'\r\n        this.codigoEditar = codigo;\r\n        $('#funcionarios').DataTable().destroy();\r\n        $('#historialfuncionarios').DataTable().destroy();\r\n        $(\"#actualesfuncionarios\").DataTable().destroy();\r\n        this.cargarFuncionario();\r\n      },\r\n      //Función que determina la vista del historial de un funcionario\r\n      ActHistorial(codigo){\r\n        $('#funcionarios').DataTable().destroy();\r\n        $('#historialfuncionarios').DataTable()\r\n        this.pestaña = 'historial'\r\n        this.codigoEditar = codigo;\r\n        this.listarHistorial();\r\n      },\r\n      //Función que determina la vista de los equipos actuales de un funcionario\r\n      EquiposActuales(codigo){\r\n        $('#funcionarios').DataTable().destroy();\r\n        $('#actualesfuncionarios').DataTable()\r\n        this.pestaña = 'actuales'\r\n        this.codigoEditar = codigo;\r\n        this.listarActuales();\r\n      },\r\n      //Función que determina la vista de agregar\r\n      agregar(){\r\n        $('#funcionarios').DataTable().destroy();\r\n        $('#historialfuncionarios').DataTable().destroy();\r\n        $(\"#actualesfuncionarios\").DataTable().destroy();\r\n        this.pestaña = 'agregar'\r\n      }, //Funciones de la vista agregar\r\n      agregarFuncionario(){\r\n        let config = {\r\n          headers: {\r\n            token: this.token\r\n          }\r\n        }\r\n        this.$v.$touch()\r\n        if(!this.$v.codigo.$invalid && !this.$v.codigoFuncionarioAgregar.$invalid && !this.$v.nomFuncionarioAgregar.$invalid && !this.$v.correoAgregar.$invalid && !this.$v.rutAgregar.$invalid){\r\n          this.axios.post('api/agregaFuncionario', {codigo: this.codigo, nombre: this.nomFuncionarioAgregar, codFuncionario: this.codigoFuncionarioAgregar, correo: this.correoAgregar, rut: this.rutAgregar}, config)\r\n            .then(res => {\r\n              if(res.data.sqlMessage){\r\n                Swal.fire({\r\n                  icon: 'error',\r\n                  title: 'Oops...',\r\n                  text: 'No se ha podido crear al funcionario ' + this.nomFuncionarioAgregar,\r\n                  footer: 'Ya existe un funcionario con un dato repetido, revise la lista de funcionarios'\r\n                })\r\n              }else{\r\n              Swal.fire(\r\n                'Se ha creado un nuevo Funcionario, ' + this.nomFuncionarioAgregar + ' se agrego al sistema!',\r\n                'Seleccione Ok para continuar',\r\n                'success'\r\n              )}\r\n              //location.reload();\r\n            })\r\n            .catch(e => {\r\n              Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'No se ha podido crear al funcionario ' + this.nomFuncionarioAgregar,\r\n                footer: 'Posible error del sistema'\r\n              })\r\n          })\r\n        }else if(!this.$v.correoAgregar.$invalid){\r\n          this.alerta('danger', 'Porfavor ingrese todos los datos requeridos');\r\n        }else{\r\n          this.alerta('danger', 'Ingrese un correo valido');\r\n        }\r\n      },\r\n      //Se reinicia la ruta para regresar a la pantalla Principal\r\n      Volver(){\r\n        $(\"#historialfuncionarios\").DataTable().destroy();\r\n        $(\"#actualesfuncionarios\").DataTable().destroy();\r\n        this.pestaña = 'funcionarios'\r\n        this.listarFuncionarios();\r\n      }, \r\n      //Carga los datos de un funcionario que se va a editar\r\n      cargarFuncionario(){\r\n        let config = {\r\n          headers: {\r\n            token: this.token\r\n          }\r\n        }\r\n        this.axios.get(`api/funcionario/${this.codigoEditar}`, config)\r\n          .then(res => {\r\n            this.codigoFuncionario = res.data[0].codFuncionario;\r\n            this.nomFuncionario = res.data[0].nombre;\r\n            this.correo = res.data[0].correo;\r\n            this.rut = res.data[0].rut;\r\n          })\r\n          .catch(e => {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Oops...',\r\n              text: 'No se ha podido ingresar a los datos de este funcionario',\r\n              footer: 'Posible error del sistema'\r\n            })\r\n            this.pestaña = 'funcionario';\r\n          })\r\n      },\r\n      //Función que permite editar a un funcionario\r\n      editarFuncionario(){\r\n        let config = {\r\n          headers: {\r\n            token: this.token\r\n          }\r\n        }\r\n        this.$v.$touch()\r\n        if(!this.$v.codigoFuncionario.$invalid && !this.$v.nomFuncionario.$invalid && !this.$v.correo.$invalid && !this.$v.rut.$invalid){\r\n          this.axios.put(`api/actualizaFuncionario/${this.codigoEditar}`, {codigo: this.codigo, nombre: this.nomFuncionario, codFuncionario: this.codigoFuncionario, correo: this.correo, rut: this.rut}, config)\r\n            .then(res => {\r\n              if(res.data.sqlMessage){\r\n                Swal.fire({\r\n                  icon: 'error',\r\n                  title: 'Oops...',\r\n                  text: 'No se ha podido actualizar al funcionario ' + this.nomFuncionario,\r\n                  footer: 'Ya existe un funcionario con este codigo o correo o rut, revise la lista de funcionarios'\r\n                })\r\n              }else{\r\n              Swal.fire(\r\n                'Se registraron los cambios del Funcionario, ' + this.nomFuncionario + ' actualización Realizada!',\r\n                'Seleccione Ok para continuar',\r\n                'success'\r\n              )}\r\n              //location.reload();\r\n            })\r\n            .catch(e => {\r\n              Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'No se ha podido actualizar al funcionario ' + this.nomFuncionario,\r\n                footer: 'Posible error del sistema'\r\n              })\r\n            })\r\n        }else if(!this.$v.correo.$invalid){\r\n          this.alerta('danger', 'Porfavor ingrese todos los datos requeridos');\r\n        }else{\r\n          this.alerta('danger', 'Ingrese un correo valido');\r\n        }\r\n      },\r\n      convertDateMysql(yourDate){\r\n        yourDate.toISOString().split('T')[0]\r\n        const offset = yourDate.getTimezoneOffset()\r\n        yourDate = new Date(yourDate.getTime() - (offset*60*1000))\r\n        return yourDate.toISOString().split('T')[0]\r\n\t\t  },\r\n      //Funcion que quita un equipo a un funcionario\r\n      quitar(id, estado){\r\n        var dt = this.convertDateMysql(new Date())\r\n        swal.fire({\r\n            title: '¿Seguro que desea quitar el equipo?',\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            cancelButtonText: 'Cancelar',\r\n            confirmButtonText: '¡Si!'\r\n        }).then((result) => {\r\n          if (result.value) {\r\n            let config = {\r\n              headers: {\r\n                token: this.token\r\n              }\r\n            }\r\n            this.axios.put(`api/actualizaHistorial/${id}`, {fecha: dt}, config)\r\n              .then(res => {\r\n                const index = this.equiposAct.findIndex(item => item.codHistorial == res.data);\r\n                console.log(index);\r\n                this.equiposAct.splice(index, 1)\r\n                Swal.fire(\r\n                  'Se ha quitado un equipo al funcionario!',\r\n                  'Seleccione Ok para continuar',\r\n                  'success'\r\n                )\r\n              })\r\n              .catch(e => {\r\n                var mensaje = 'Posible error del sistema';\r\n                if(e.response.data.mensaje){\r\n                  mensaje = e.response.data.mensaje;\r\n                }\r\n                Swal.fire({\r\n                  icon: 'error',\r\n                  title: 'Oops...',\r\n                  text: 'No se ha podido quitar el equipo a su funcionario',\r\n                  footer: mensaje\r\n                })\r\n              })\r\n            }\r\n          })\r\n      },\r\n      //Funciones de la alerta\r\n      countDownChanged(dismissCountDown) {\r\n        this.dismissCountDown = dismissCountDown\r\n      },\r\n      showAlert() {\r\n        this.dismissCountDown = this.dismissSecs\r\n      },\r\n      alerta(color, texto){\r\n        this.mensaje.color = color;\r\n        this.mensaje.texto = texto;\r\n        this.showAlert();\r\n      },\r\n    },\r\n    //Se cargan las tablas como Datatables del Jquery\r\n    mounted(){\r\n      $('#funcionarios').DataTable();\r\n      $('#historialfuncionarios').DataTable();\r\n      $(\"#actualesfuncionarios\").DataTable()\r\n    },\r\n    watch: {\r\n      funcionarios(val) {\r\n        if(this.pestaña === 'funcionarios'){\r\n          $('#funcionarios').DataTable().destroy();\r\n          this.$nextTick(()=> {\r\n            $('#funcionarios').DataTable()\r\n          });\r\n        }\r\n      },\r\n      historial(val) {\r\n        if(this.pestaña === 'historial'){\r\n          $('#historialfuncionarios').DataTable().destroy();\r\n          this.$nextTick(()=> {\r\n            $('#historialfuncionarios').DataTable()\r\n          });\r\n        }\r\n      },\r\n      equiposAct(val) {\r\n        if(this.pestaña === 'actuales'){\r\n          $('#actualesfuncionarios').DataTable().destroy();\r\n          this.$nextTick(()=> {\r\n            $('#actualesfuncionarios').DataTable()\r\n          });\r\n        }\r\n      },\r\n    }\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n  .menu{\r\n    padding: 30px;\r\n  }\r\n\r\n  body{\r\n    background-color: #eee;\r\n  }\r\n\r\n  .boton{\r\n    margin: 20px;\r\n    width: 90%;\r\n    border-radius: 12px;\r\n    border-color: black;\r\n  }\r\n</style>"]}]}