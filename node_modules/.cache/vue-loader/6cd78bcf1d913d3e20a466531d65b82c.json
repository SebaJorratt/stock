{"remainingRequest":"D:\\inventarioInformatico\\stock\\stock\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\inventarioInformatico\\stock\\stock\\src\\views\\bodegas.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\inventarioInformatico\\stock\\stock\\src\\views\\bodegas.vue","mtime":1646924244749},{"path":"D:\\inventarioInformatico\\stock\\stock\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645539054355},{"path":"D:\\inventarioInformatico\\stock\\stock\\node_modules\\babel-loader\\lib\\index.js","mtime":1645539058368},{"path":"D:\\inventarioInformatico\\stock\\stock\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645539054355},{"path":"D:\\inventarioInformatico\\stock\\stock\\node_modules\\vue-loader\\lib\\index.js","mtime":1645539059241}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["bodegas.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"bodegas.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"menu\">\r\n        <navbar />\r\n        <b-container><br>\r\n            <h1 class=\"mt-2\">Administración de Bodegas</h1>\r\n            <h2 class=\"mt-1\" v-if=\"pestaña === 'bodegas'\"> Listado de Bodegas</h2>\r\n            <h2 class=\"mt-1\" v-if=\"pestaña === 'ordenes'\"> Listado de Ordenes de la Bodega: {{nomBodega}}</h2>\r\n            <b-alert\r\n              :show=\"dismissCountDown\"\r\n              dismissible\r\n              :variant=\"mensaje.color\"\r\n              @dismissed=\"dismissCountDown=0\"\r\n              @dismiss-count-down=\"countDownChanged\"\r\n              >\r\n              {{mensaje.texto}}\r\n            </b-alert>\r\n            <div class=\"mt-1\">\r\n                <b-row v-if=\"pestaña === 'bodegas'\">\r\n                    <b-col cols=\"12\" md=\"6\">\r\n                        <b-button @click=\"ActCrear()\" class=\"btn-success btn boton mt-5\">Rellenar Bodega</b-button>\r\n                    </b-col>\r\n                    <b-col cols=\"12\" md=\"6\" v-if=\"agregar === 'no'\">\r\n                        <b-button @click=\"ActAgregar()\" variant=\"primary\" class=\"btn boton mt-5\">Agregar Bodega</b-button>\r\n                    </b-col>\r\n                    <b-col cols=\"12\" md=\"6\" v-if=\"agregar === 'si'\">\r\n                        <b-button @click=\"NoAgregar()\" class=\"btn boton mt-5\">No Agregar</b-button>\r\n                    </b-col>\r\n                </b-row>\r\n                <b-row class=\"m-4\" v-if=\"agregar === 'si'\">\r\n                    <b-col cols=\"12\" md=\"6\">\r\n                        <label for=\"exampleInputEmail1\" class=\"form-label\">Nueva Bodega</label>\r\n                        <input type=\"text\" class=\"form-control\" aria-describedby=\"emailHelp\" v-model=\"$v.nuevaBodega.$model\">\r\n                        <p class=\"text-danger\" v-if=\"$v.nuevaBodega.$error\">Debe Ingresar el nombre de la Bodega</p>\r\n                    </b-col>\r\n                    <b-col cols=\"12\" md=\"6\">\r\n                        <b-button @click=\"agregaBodega()\" variant=\"primary\" class=\"btn boton mt-5\">Agregar Bodega</b-button>\r\n                    </b-col>\r\n                </b-row>\r\n                <table class=\"table table-striped table-dark table-responsive-lg table-responsive-md\" id=\"bodegas\" v-if=\"pestaña === 'bodegas'\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Nombre de la Bodega</th>\r\n                      <th scope=\"col\">Enviar a Dirección</th>\r\n                      <th scope=\"col\">Ordenes de Compra</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr v-for=\"i in bodegas\" :key=\"i.nomBodega\">\r\n                      <td scope=\"row\">{{i.nomBodega}}</td>\r\n                      <td><b-button @click=\"ActProductos(i.nomBodega)\" class=\"btn-warning btn-sm\" style=\"border-color: white;\">Enviar</b-button></td>\r\n                      <td><b-button @click=\"ActOrdenes(i.nomBodega)\" class=\"btn-success btn-sm\" style=\"border-color: white;\">Ordenes</b-button></td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <b-button @click=\"Volver()\" class=\"btn boton mt-5\" v-if=\"pestaña === 'crear'\">Volver al Listado de Bodegas</b-button>\r\n                <div class=\" card mt-4\" v-if=\"pestaña === 'crear'\">\r\n                    <div class=\"card-header\">\r\n                        <h2>Determine que productos serán enviados a la Bodega</h2>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <b-row class=\"mt-2\">\r\n                            <b-col cols=\"12\" md=\"3\">\r\n                                <label for=\"exampleInputEmail1\" class=\"form-label\">Bodega</label>\r\n                                <select @change=\"cambiaBodega()\" class=\"form-control\" v-model=\"bodegaCrear\">\r\n                                    <option v-for=\"i in bodegas\" :key=\"i.nomBodega\" :value=\"i.nomBodega\">{{i.nomBodega}}</option>\r\n                                </select>\r\n                            </b-col>\r\n                            <b-col cols=\"12\" md=\"2\">\r\n                                <label for=\"exampleInputEmail1\" class=\"form-label\">Proveedor</label>\r\n                                <input type=\"text\" class=\"form-control\" aria-describedby=\"emailHelp\" v-model=\"$v.proveedor.$model\">\r\n                                <p class=\"text-danger\" v-if=\"$v.proveedor.$error\">Debe Ingresar el proveedor</p>\r\n                            </b-col>\r\n                            <b-col cols=\"12\" md=\"3\">\r\n                                <label for=\"exampleInputEmail1\" class=\"form-label\">Numero de Orden</label>\r\n                                <input type=\"text\" class=\"form-control\" aria-describedby=\"emailHelp\" v-model=\"$v.nuevaOrden.$model\">\r\n                                <p class=\"text-danger\" v-if=\"$v.nuevaOrden.$error\">Debe Ingresar el numero de la Orden</p>\r\n                            </b-col>\r\n                            <b-col cols=\"12\" md=\"2\">\r\n                                <b-button @click=\"agregaProducto()\" variant=\"primary\" class=\"btn-primary btn boton\">Agregar Producto</b-button>\r\n                            </b-col>\r\n                            <b-col cols=\"12\" md=\"2\">\r\n                                <b-button @click=\"quitarProducto()\" class=\"btn-danger btn boton\">Quitar Producto</b-button>\r\n                            </b-col>\r\n                        </b-row>\r\n                        <b-row class=\"mt-2\" v-for=\"i in productos\" :key=\"i.key\">\r\n                            <b-col cols=\"12\" md=\"3\">\r\n                                <label for=\"exampleInputEmail1\" class=\"form-label\">Codigo de Barra</label>\r\n                                <input type=\"text\" @input=\"buscarPorCodigo(i.codigoBarra, i.key, i.nomProducto)\" class=\"form-control\" aria-describedby=\"emailHelp\" v-model=\"i.codigoBarra\"> \r\n                            </b-col>\r\n                            <b-col cols=\"12\" md=\"3\">\r\n                                <label for=\"exampleInputEmail1\" class=\"form-label\">Producto</label>\r\n                                <select class=\"form-control\" @click=\"anterior(i.nomProducto)\" @change=\"cambioProducto(i.nomProducto, i.key)\" v-model=\"i.nomProducto\">\r\n                                    <option v-for=\"i in prods\" :key=\"i.nomProducto\" :value=\"i.nomProducto\">{{i.nomProducto}}</option>\r\n                                </select>\r\n                            </b-col>\r\n                            <b-col cols=\"12\" md=\"1\">\r\n                                <label for=\"exampleInputEmail1\" class=\"form-label\">Cantidad</label>\r\n                                <input type=\"number\" @change=\"cantMin(i.key)\" min=\"1\" class=\"form-control\" aria-describedby=\"emailHelp\" v-model=\"i.cantidad\">\r\n                            </b-col>\r\n                            <b-col cols=\"12\" md=\"2\">\r\n                                <label for=\"exampleInputEmail1\" class=\"form-label\">Stock en Bodega</label>\r\n                                <input disabled type=\"number\" class=\"form-control\" aria-describedby=\"emailHelp\" v-model=\"i.stock\">\r\n                            </b-col>\r\n                            <b-col cols=\"12\" md=\"1\">\r\n                                <label for=\"exampleInputEmail1\" class=\"form-label\">Critico</label>\r\n                                <input disabled type=\"number\" class=\"form-control\" aria-describedby=\"emailHelp\" v-model=\"i.stockCritico\">\r\n                            </b-col>\r\n                            <b-col cols=\"12\" md=\"2\">\r\n                                <b-button @click=\"detalles(i.codBar)\" v-b-modal.modal-1 class=\"btn-success boton\">Detalles Producto</b-button>\r\n                            </b-col>\r\n                        </b-row>\r\n                        <b-row>\r\n                            <b-col cols=\"12\" md=\"6\">\r\n                                <b-button @click=\"generarInforme()\" class=\"btn-success btn boton mt-5\">Generar Orden de Compra</b-button>\r\n                            </b-col> \r\n                            <b-col cols=\"12\" md=\"6\">\r\n                                <b-button @click=\"sumaStock()\" class=\"btn-success btn boton mt-5\">Compra en Caja Menor</b-button>\r\n                            </b-col> \r\n                        </b-row>\r\n                    </div>\r\n                </div>\r\n                <b-modal id=\"modal-1\" size=\"lg\" title=\"Detalles del Producto\">\r\n                    <div class=\"card-body\">\r\n                        <b-row class=\"mt-2\">\r\n                            <b-col cols=\"12\" md=\"4\">\r\n                                <label for=\"exampleInputEmail1\" class=\"form-label\">Codigo de Barras</label>\r\n                                <input disabled type=\"text\" class=\"form-control\" aria-describedby=\"emailHelp\" v-model=\"codigo\">\r\n                            </b-col>\r\n                            <b-col cols=\"12\" md=\"4\">\r\n                                <label for=\"exampleInputEmail1\" class=\"form-label\">Nombre</label>\r\n                                <input disabled type=\"text\" class=\"form-control\" aria-describedby=\"emailHelp\" v-model=\"producto\">\r\n                            </b-col>\r\n                            <b-col cols=\"12\" md=\"4\">\r\n                                <label for=\"exampleInputEmail1\" class=\"form-label\">Marca</label>\r\n                                <input disabled type=\"text\" class=\"form-control\" aria-describedby=\"emailHelp\" v-model=\"marca\">\r\n                            </b-col>\r\n                        </b-row>\r\n                        <b-row class=\"mt-4\">\r\n                            <b-col cols=\"12\" md=\"12\">\r\n                                <label for=\"exampleInputEmail1\" class=\"form-label\">Descripcion</label>\r\n                                <textarea disabled type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" v-model=\"descripcion\"></textarea>\r\n                            </b-col>\r\n                        </b-row>\r\n                    </div>\r\n                </b-modal>\r\n\r\n                <b-row v-if=\"pestaña === 'ordenes'\">\r\n                    <b-col cols=\"12\" md=\"12\">\r\n                        <b-button @click=\"Volver()\" class=\"btn btn boton mt-5\">Volver al Listado de Bodegas</b-button>\r\n                    </b-col>\r\n                </b-row>\r\n                <table class=\"table table-striped table-dark table-responsive-lg table-responsive-md\" id=\"ordenes\" v-if=\"pestaña === 'ordenes'\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Codigo de Orden</th>\r\n                      <th scope=\"col\">Bodega</th>\r\n                      <th scope=\"col\">Proveedor</th>\r\n                      <th scope=\"col\">Fecha</th>\r\n                      <th scope=\"col\">Ver al Detalle</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr v-for=\"i in ordenes\" :key=\"i.codOrden\">\r\n                      <td scope=\"row\">{{i.codOrden}}</td>\r\n                      <td>{{i.nomBodega}}</td>\r\n                      <td>{{i.proveedor}}</td>\r\n                      <td>{{i.fecha}}</td>\r\n                      <td><b-button @click=\"ActDOrdenes(i.codOrden)\" class=\"btn-success btn-sm\" style=\"border-color: white;\">Detalles</b-button></td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n\r\n                <b-row v-if=\"pestaña === 'detalleOrden'\">\r\n                    <b-col cols=\"12\" md=\"12\">\r\n                        <b-button @click=\"VolverORD()\" class=\"btn btn boton mt-5\">Volver al Historial</b-button>\r\n                    </b-col>\r\n                </b-row>\r\n                <table class=\"table table-striped table-dark table-responsive-lg table-responsive-md\" id=\"detalleOrden\" v-if=\"pestaña === 'detalleOrden'\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">ID</th>\r\n                      <th scope=\"col\">Codigo Barra</th>\r\n                      <th scope=\"col\">Producto</th>\r\n                      <th scope=\"col\">Cantidad</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr v-for=\"i in detalleOrden\" :key=\"i.corrOrdenProducto\">\r\n                      <td scope=\"row\">{{i.corrOrdenProducto}}</td>\r\n                      <td>{{i.codigoBarra}}</td>\r\n                      <td>{{i.nomProducto}}</td>\r\n                      <td>{{i.cantidad}}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n\r\n                <b-row v-if=\"pestaña === 'enviar'\">\r\n                    <b-col cols=\"12\" md=\"12\">\r\n                        <b-button @click=\"Volver()\" class=\"btn btn boton mt-5\">Volver al Listado de Bodegas</b-button>\r\n                    </b-col>\r\n                </b-row>\r\n                <table class=\"table table-striped table-dark table-responsive-lg table-responsive-md\" id=\"enviar\" v-if=\"pestaña === 'enviar'\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Codigo Barra</th>\r\n                      <th scope=\"col\">Nombre Producto</th>\r\n                      <th scope=\"col\">Stock Regional</th>\r\n                      <th scope=\"col\">Stock Bodega</th>\r\n                      <th scope=\"col\">Cantidad</th>\r\n                      <th scope=\"col\">Stock Critico</th>\r\n                      <th scope=\"col\">Enviar a Dirección</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr v-for=\"i in enviar\" :key=\"i.codigoBarra\">\r\n                      <td scope=\"row\">{{i.codigoBarra}}</td>\r\n                      <td>{{i.nomProducto}}</td>\r\n                      <td>{{i.stock}}</td>\r\n                      <td>{{i.stockBodega}}</td>\r\n                      <td><input type=\"number\" @change=\"cantMinBodega(i.codigoBarra)\" min=\"1\" class=\"form-control\" aria-describedby=\"emailHelp\" v-model=\"i.cantidad\"></td>\r\n                      <td>{{i.stockCritico}}</td>\r\n                      <td><b-button @click=\"EnviarDireccion(i.codigoBarra, i.cantidad, i.stockBodega)\" class=\"btn-success btn-sm\" style=\"border-color: white;\">Enviar</b-button></td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n            </div>\r\n        </b-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport navbar from \"../components/navbar.vue\";\r\nimport { required, minLength} from \"vuelidate/lib/validators\";\r\n\r\nimport 'jquery/dist/jquery.min.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"datatables.net-dt/js/dataTables.dataTables\"\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\r\nimport $ from 'jquery'; \r\n\r\nimport { mapState } from 'vuex'\r\nexport default {\r\n    name: \"about\",\r\n    components: {\r\n        navbar,\r\n    },\r\n    data() {\r\n      return {\r\n        //Datos para agregar un nuevo memo (historial) con v-model\r\n        pestaña: 'bodegas',\r\n        agregar: 'no',\r\n        bodegas: [],\r\n        ordenes: [],\r\n        detalleOrden: [],\r\n        enviar: [],\r\n        //Variables del AGREGAR\r\n        nuevaBodega: '',\r\n        //Variable para reconocer una bodega\r\n        nomBodega: '',\r\n        //Datos para agregar una nueva Orden de Compra con v-model\r\n        bodegaCrear: '',\r\n        proveedor: '',\r\n        nuevaOrden: '',\r\n        cantidadProductos: 1,\r\n        productos: [{key: 1, nomProducto: '', cantidad: 0, stock: 0, stockCritico: 0, codigoBarra: '', codBar: ''}],\r\n        prods: [],\r\n        productoAnt: '',\r\n        //VARIABLES DE DETALLES\r\n        codigo: '',\r\n        producto: '',\r\n        marca: '',\r\n        descripcion: '',\r\n        //Variables de las alertas\r\n        dismissSecs: 5,\r\n        dismissCountDown: 0,\r\n        mensaje: {color: '', texto: ''},\r\n      }\r\n    },\r\n    validations:{\r\n        //Validaciones de los input\r\n        nuevaBodega:{required},\r\n        proveedor:{required},\r\n        nuevaOrden:{required},\r\n    },\r\n    computed: {\r\n      ...mapState(['token', 'usuarioDB'])\r\n    },\r\n    created(){\r\n        this.cargarBodegas();\r\n    },\r\n    methods:{\r\n        //METODOS PARA GENERAR LAS ORDENES DE COMPRA\r\n        //Metodo que Carga todos los productos del sistema\r\n        cargarProductos(primera){\r\n            let config = {\r\n                headers: {\r\n                    token: this.token\r\n                }\r\n            }\r\n            this.axios.get(`api/obtenerProductosBodega/${this.bodegaCrear}`, config)\r\n            .then(res => {\r\n                this.prods = res.data;\r\n                if(primera){\r\n                    this.productos[0].nomProducto = this.prods[0].nomProducto\r\n                    this.productos[0].stock = this.prods[0].stockBodega\r\n                    this.productos[0].stockCritico = this.prods[0].stockCritico\r\n                    this.productos[0].codigoBarra = this.prods[0].codigoBarra\r\n                    this.productos[0].codBar = this.prods[0].codigoBarra\r\n                    if(this.productos[0].stock < this.productos[0].stockCritico){\r\n                        if(this.productos[0].stock === 0){\r\n                            this.alerta('danger', 'No hay stock disponible en bodega para el producto ' + this.productos[0].nomProducto)\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .catch(e => {\r\n                this.alerta('danger', 'No se han podido cargar los Productos');\r\n            })\r\n        },\r\n        //Función que carga los productos de una bodega para trasferir productos a Dirección Regional\r\n        cargarProductosBodega(){\r\n            let config = {\r\n                headers: {\r\n                    token: this.token\r\n                }\r\n            }\r\n            this.axios.get(`api/obtenerProductosBodega/${this.nomBodega}`, config)\r\n            .then(res => {\r\n                for(var i = 0; i<res.data.length; i++){\r\n                    this.enviar.push({codigoBarra: res.data[i].codigoBarra, nomProducto: res.data[i].nomProducto, stock: res.data[i].stock, stockBodega: res.data[i].stockBodega, cantidad: 1, stockCritico: res.data[i].stockCritico})\r\n                }\r\n            })\r\n            .catch(e => {\r\n                this.alerta('danger', 'No se han podido cargar los Productos');\r\n            })\r\n        },\r\n        //Función que permite re-cargar los productos al momento de cambiar la bodega en la vista de rellenar Bodega\r\n        cambiaBodega(){\r\n            for(var i = 0; i<this.productos.length-1; i++){\r\n                this.productos.splice(-1)\r\n            }\r\n            this.cargarProductos(true)\r\n        },\r\n        buscarPorCodigo(codigoBarra, key, nomProducto){\r\n            this.anterior(nomProducto)\r\n            const indexActual = this.productos.findIndex(item => item.key == key);\r\n            const posProd = this.prods.findIndex(item => item.codigoBarra == codigoBarra)\r\n            if(posProd !== -1){\r\n                this.cambioProducto(this.prods[posProd].nomProducto, key)\r\n            }else{\r\n                this.productos[indexActual].nomProducto = this.productoAnt\r\n            }\r\n        },\r\n        //Función que te permite guardar el valor anterior del select\r\n        anterior(nomProducto){\r\n            this.productoAnt = nomProducto\r\n        },\r\n        //Si se cambia un producto se debe buscar su stock\r\n        cambioProducto(nomProducto, key){\r\n            const indexActual = this.productos.findIndex(item => item.key == key);\r\n            var repetido = false;\r\n            for(var i = 0; i<this.productos.length; i++){\r\n                if(i != indexActual){\r\n                    if(this.productos[i].nomProducto === nomProducto){\r\n                        repetido = true;\r\n                    }\r\n                }\r\n            }\r\n            if(!repetido){\r\n                const index = this.prods.findIndex(item => item.nomProducto == nomProducto);\r\n                const index2 = this.productos.findIndex(item => item.key == key);\r\n                this.productos[index2].stock = this.prods[index].stockBodega\r\n                this.productos[index2].stockCritico = this.prods[index].stockCritico\r\n                this.productos[index2].nomProducto = this.prods[index].nomProducto;\r\n                this.productos[index2].codigoBarra = this.prods[index].codigoBarra\r\n                this.productos[index2].codBar = this.prods[index].codigoBarra\r\n                if(this.productos[index2].cantidad > this.productos[index2].stock){\r\n                    this.productos[index2].cantidad = this.productos[index2].stock;\r\n                }\r\n                if(this.productos[index2].stock + this.productos[index2].cantidad < this.productos[index2].stockCritico){\r\n                    if(this.productos[index2].stock){\r\n                        this.alerta('danger', 'El existe stock en bodega para el producto ' + this.productos[index2].nomProducto)\r\n                    }\r\n                    this.alerta('danger', 'El stock que existe actualmente en bodega del producto \"' + this.productos[index2].nomProducto + '\" es inferior al stock crítico')\r\n                }\r\n            }else{\r\n                this.productos[indexActual].nomProducto = this.productoAnt  \r\n            }\r\n        },\r\n        //Se agrega un nuevo posible producto\r\n        //ADEMAS debe revisar si los valores anteriores estan repetidos\r\n        agregaProducto(){\r\n            this.cantidadProductos++\r\n            var a = 0;\r\n            this.productos.push({key: this.cantidadProductos, nomProducto: '', cantidad: 0, stock: 0});\r\n            while(a < this.prods.length){\r\n                const index = this.productos.findIndex(item => item.nomProducto == this.prods[a].nomProducto);\r\n                if(index != -1){\r\n                    a++;\r\n                }else{\r\n                    this.productos[this.productos.length-1].nomProducto = this.prods[a].nomProducto\r\n                    this.productos[this.productos.length-1].stock = this.prods[a].stockBodega\r\n                    this.productos[this.productos.length-1].stockCritico = this.prods[a].stockCritico\r\n                    this.productos[this.productos.length-1].codigoBarra = this.prods[a].codigoBarra\r\n                    this.productos[this.productos.length-1].codBar = this.prods[a].codigoBarra\r\n                    this.productos[this.productos.length-1].key = this.cantidadProductos\r\n                    break;\r\n                }\r\n                if(a == this.prods.length){\r\n                    this.cantidadProductos--;\r\n                    this.productos.splice(-1);\r\n                    this.alerta('danger','No existen mas productos para agregar')\r\n                    break;\r\n                }\r\n            } \r\n            if(this.productos[this.productos.length-1].stock < this.productos[this.productos.length-1].stockCritico && a != this.prods.length){\r\n                this.alerta('danger', 'El stock que existe actualmente en bodega del producto \"' + this.productos[this.productos.length-1].nomProducto + '\" es inferior al stock crítico')\r\n            }\r\n        },\r\n        //Se quita un Producto de los que serán agregados al sistema\r\n        quitarProducto(){\r\n            if(this.productos.length > 1){\r\n                this.cantidadProductos--;\r\n                this.productos.splice(-1);\r\n            }else{\r\n                this.alerta('danger', 'Tiene que existir al menos 1 producto');\r\n            }\r\n        },\r\n        //Indicamos el minimo de cantidad para que no este vacio o sea menor a 0\r\n        cantMin(producto){\r\n            const index = this.productos.findIndex(item => item.key == producto);\r\n            if(this.productos[index].cantidad < 0 || this.productos[index].cantidad == ''){\r\n                this.productos[index].cantidad = 0;\r\n            }\r\n            if(this.productos[index].stock + parseInt(this.productos[index].cantidad) < this.productos[index].stockCritico){\r\n                this.alerta('danger', 'El stock que existe actualmente en bodega del producto \"' + this.productos[index].nomProducto + '\" es inferior al stock crítico ingrese mas cantidad para cumplir con el stock Crítico')\r\n            }\r\n        },\r\n        //Indicamos el minimo de cantidad para que no este vacio o sea menor a 0\r\n        cantMinBodega(producto){\r\n            const index = this.enviar.findIndex(item => item.codigoBarra == producto);\r\n            if(this.enviar[index].cantidad < 0){\r\n                this.enviar[index].cantidad = 0;\r\n            }\r\n            if(this.enviar[index].stockBodega - parseInt(this.enviar[index].cantidad) < this.enviar[index].stockCritico){\r\n                this.alerta('danger', 'Si realiza esta acción el stock en bodega del producto \"' + this.enviar[index].nomProducto + '\" sera inferior al stock crítico')\r\n            }\r\n        },\r\n        //Permite ver los detalles de un producto y los carga\r\n        detalles(id){\r\n            let config = {\r\n                headers: {\r\n                    token: this.token\r\n                }\r\n            }\r\n            this.axios.get(`api/obtenerProducto/${id}`, config)\r\n                .then(res => {\r\n                    this.codigo = res.data[0].codigoBarra;\r\n                    this.producto = res.data[0].nomProducto;\r\n                    this.marca = res.data[0].marca;\r\n                    this.descripcion = res.data[0].descripcion\r\n                })\r\n                .catch(e => {\r\n                    Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'No se ha logrado encontrar los datos del equipo',\r\n                    footer: 'Posible error del sistema'\r\n                    })\r\n                })\r\n        },\r\n        convertDateMysql(yourDate){\r\n            yourDate.toISOString().split('T')[0]\r\n            const offset = yourDate.getTimezoneOffset()\r\n            yourDate = new Date(yourDate.getTime() - (offset*60*1000))\r\n            return yourDate.toISOString().split('T')[0]\r\n\t\t},\r\n        //Función que permite generar un informe y enviar los datos de un nuevo HISTORIAL \r\n        generarInforme(){\r\n            var dt = this.convertDateMysql(new Date())\r\n            var sumaStockBodega = 0;\r\n            var suma = 0;\r\n            for(var i = 0; i < this.productos.length; i++){\r\n                sumaStockBodega = sumaStockBodega + this.productos[i].stock\r\n                suma = suma + this.productos[i].cantidad\r\n            }\r\n            this.$v.$touch()\r\n            if(!this.$v.nuevaOrden.$invalid && !this.$v.proveedor.$invalid){\r\n                swal.fire({\r\n                title: '¿Seguro que desea realizar la orden de compra a la bodega ' + this.bodegaCrear + '?',\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                cancelButtonText: 'Cancelar',\r\n                confirmButtonText: '¡Si!'\r\n                }).then((result) => {\r\n                    if (result.value) {\r\n                        if(sumaStockBodega > 0 && suma > 0){\r\n                            let config = {\r\n                                headers: {\r\n                                    token: this.token\r\n                                }\r\n                            }\r\n                            this.axios.post('api/agregaOrdenEntrega', {codOrden: this.nuevaOrden, proveedor: this.proveedor, fecha: dt, nomBodega: this.bodegaCrear}, config)\r\n                            .then(res => {\r\n                            if(!res.data.sqlMessage){\r\n                                this.ORDENProducto();\r\n                                this.sumaStock();\r\n                            }else{\r\n                                Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Oops...',\r\n                                text: 'No se ha logrado crear ',\r\n                                footer: 'Algún dato ha sido incorrecto verifiquelos'\r\n                                })\r\n                            }\r\n                            })\r\n                            .catch(e => {\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Oops...',\r\n                                text: 'No se ha logrado registrar la orden de compra',\r\n                                footer: 'Posible error del sistema'\r\n                            })\r\n                            }) \r\n                        }else if(sumaStockBodega > 0){\r\n                            this.alerta('danger', 'No se encuentra stock disponible en bodega')\r\n                        }else{\r\n                            this.alerta('danger', 'No se ha ingresado ninguna cantidad')\r\n                        }\r\n                    }\r\n                })\r\n            }else{\r\n                this.alerta('danger', 'Porfavor ingrese todos los campos requeridos')\r\n            }\r\n        },\r\n        //Registra los productos de la ORDEN DE COMPRA\r\n        ORDENProducto(){\r\n            for(var i = 0; i<this.productos.length; i++){\r\n                if(this.productos[i].cantidad > 0){\r\n                    let config = {\r\n                        headers: {\r\n                            token: this.token\r\n                        }\r\n                    }\r\n                    this.axios.post('api/agregaOrdenProducto', {cantidad: this.productos[i].cantidad, codOrden: this.nuevaOrden, codigoBarra: this.productos[i].codBar}, config)\r\n                        .then(res => {\r\n                        if(!res.data.sqlMessage){\r\n                            Swal.fire(\r\n                            'Se ha registrado la orden de compra satisfactoriamente',\r\n                            'Seleccione Ok para continuar',\r\n                            'success'\r\n                            )\r\n                        }else{\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Oops...',\r\n                                text: 'No se ha logrado crear ',\r\n                                footer: 'Algún dato ha sido incorrecto verifiquelos'\r\n                            })\r\n                        }\r\n                        })\r\n                        .catch(e => {\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Oops...',\r\n                                text: 'No se ha logrado registrar la orden de compra',\r\n                                footer: 'Posible error del sistema'\r\n                            })\r\n                        })\r\n                }\r\n            }\r\n        },\r\n\r\n        //Suma los stock de BODEGA de cada producto\r\n        sumaStock(){\r\n            for(var i = 0; i<this.productos.length; i++){\r\n                if(this.productos[i].cantidad > 0){\r\n                    let config = {\r\n                        headers: {\r\n                            token: this.token\r\n                        }\r\n                    }\r\n                    this.axios.put(`api/actualizaStockBodegamas/${this.productos[i].codBar}`, {cantidad: this.productos[i].cantidad, nomBodega: this.bodegaCrear}, config)\r\n                        .then(res => {\r\n                            this.actualizarStock();\r\n                        })\r\n                        .catch(e => {\r\n                            var mensaje = 'Posible error del sistema';\r\n                            Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: 'No se ha logrado registrar la entrega de insumos',\r\n                            footer: mensaje\r\n                            })\r\n                        })\r\n                }\r\n            }\r\n        },\r\n        //Actualiza la pagina tras generar una orden de compra\r\n        actualizarStock(){\r\n            for(var i = 0; i<this.productos.length-1; i++){\r\n                this.cantidadProductos--;\r\n                this.productos.splice(-1);\r\n            }\r\n            this.cargarProductos(true);\r\n        },\r\n        //Función para cargar las bodegas del sistema\r\n        cargarBodegas(){\r\n            let config = {\r\n                headers: {\r\n                    token: this.token\r\n                }\r\n            }\r\n            this.axios.get('api/obtenerbodegas', config)\r\n            .then(res => {\r\n                this.bodegas = res.data;\r\n                this.bodegaCrear = res.data[0].nomBodega\r\n            })\r\n            .catch(e => {\r\n                this.alerta('danger', 'No se han podido cargar las bodegas');\r\n            })\r\n        },\r\n        //Función para regresar a la vista principal\r\n        Volver(){\r\n            this.pestaña = 'bodegas'\r\n            $('#ordenes').DataTable().destroy()\r\n            $('#enviar').DataTable().destroy()\r\n            this.enviar = []\r\n            $('#bodegas').DataTable()\r\n            this.cargarBodegas();\r\n        },\r\n        VolverORD(){\r\n            $('#detalleOrden').DataTable().destroy();\r\n            this.pestaña = 'ordenes'\r\n            this.cargarOrdenes();\r\n            $('#ordenes').DataTable()\r\n        },\r\n        //Funciones para cambiar las vistas\r\n        ActAgregar(){\r\n            this.agregar = 'si'\r\n        },\r\n        NoAgregar(){\r\n            this.agregar = 'no'\r\n        },\r\n        \r\n        ActOrdenes(nomBodega){\r\n            this.nomBodega = nomBodega\r\n            this.pestaña = 'ordenes'\r\n            $('#bodegas').DataTable().destroy();\r\n            $('#ordenes').DataTable()\r\n            this.cargarOrdenes();\r\n        },\r\n        ActDOrdenes(codOrden){\r\n            this.histo = codOrden;\r\n            this.pestaña = 'detalleOrden';\r\n            $('#ordenes').DataTable().destroy();\r\n            $('#detalleOrden').DataTable()\r\n            this.cargarDetalleOrden();\r\n        },\r\n        ActCrear(){\r\n            this.pestaña = 'crear'\r\n            this.agregar = 'no'\r\n            $('#bodegas').DataTable().destroy();\r\n            this.cargarProductos(true);\r\n        },\r\n        ActProductos(nomBodega){\r\n            this.nomBodega = nomBodega\r\n            this.pestaña = 'enviar'\r\n            $('#bodegas').DataTable().destroy();\r\n            $('#enviar').DataTable()\r\n            this.cargarProductosBodega();\r\n        },\r\n        //Funciones de AGREGAR\r\n        agregaBodega(){\r\n            this.$v.$touch()\r\n            if(!this.$v.nuevaBodega.$invalid){\r\n                let config = {\r\n                    headers: {\r\n                        token: this.token\r\n                    }\r\n                }\r\n                this.axios.post('api/agregaBodega', {nomBodega: this.nuevaBodega}, config)\r\n                    .then(res => {\r\n                        if(!res.data.sqlMessage){\r\n                            this.bodegas.push({nomBodega: this.nuevaBodega})\r\n                            Swal.fire(\r\n                            'Se ha registrado la bodega satisfactoriamente',\r\n                            'Seleccione Ok para continuar',\r\n                            'success'\r\n                            )\r\n                        }else{\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Oops...',\r\n                                text: 'No se ha logrado crear la nueva bodega \"' + this.nuevaBodega + '\" .',\r\n                                footer: 'El nombre de la bodega ya existe en el sistema'\r\n                            })\r\n                        }\r\n                        })\r\n                        .catch(e => {\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Oops...',\r\n                                text: 'No se ha logrado registrar la nueva bodega',\r\n                                footer: 'Posible error del sistema'\r\n                            })\r\n                        })\r\n            }else{\r\n                this.alerta('danger', 'Porfavor ingrese un nombre para la nueva bodega')\r\n            }\r\n        },\r\n        //TABLA DE ORDENES QUE POSEE UNA BODEGA\r\n        cargarOrdenes(){\r\n            let config = {\r\n                headers: {\r\n                    token: this.token\r\n                }\r\n            }\r\n            this.axios.get(`api/obtenerOrdenesBodega/${this.nomBodega}`, config)\r\n            .then(res => {\r\n                this.ordenes = res.data;\r\n            })\r\n            .catch(e => {\r\n                this.alerta('danger', 'No se ha logrado cargar la orden');\r\n            })\r\n        },\r\n        //Cargar los detalles de una orden\r\n        cargarDetalleOrden(){\r\n            let config = {\r\n                headers: {\r\n                    token: this.token\r\n                }\r\n            }\r\n            this.axios.get(`api/obtenerOrden/${this.histo}`, config)\r\n            .then(res => {\r\n                this.detalleOrden = res.data;\r\n            })\r\n            .catch(e => {\r\n                this.alerta('danger', 'No se ha logrado cargar el detalle de una orden');\r\n            })\r\n        },\r\n        //Función que envia un stock desde bodega a Dirección Regional\r\n        EnviarDireccion(codigoBarra, cantidad, stockBodega){\r\n            if(stockBodega > 0){\r\n                swal.fire({\r\n                    title: '¿Seguro que desea enviar el stock de la bodega con una cantidad de \"' + cantidad + '\" a dirección regional para el producto de codigo: \"' + codigoBarra + '\"?',\r\n                    type: 'warning',\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: '#3085d6',\r\n                    cancelButtonColor: '#d33',\r\n                    cancelButtonText: 'Cancelar',\r\n                    confirmButtonText: '¡Si!'\r\n                }).then((result) => {\r\n                    if (result.value) {\r\n                        let config = {\r\n                            headers: {\r\n                                token: this.token\r\n                            }\r\n                        }\r\n                        this.axios.put(`api/actualizaStockBodega/${codigoBarra}`, {cantidad: parseInt(cantidad), nomBodega: this.nomBodega}, config)\r\n                                .then(res => {\r\n                                    this.recibirDireccion(codigoBarra, cantidad);\r\n                                })\r\n                                .catch(e => {\r\n                                    var mensaje = 'Posible error del sistema';\r\n                                    Swal.fire({\r\n                                    icon: 'error',\r\n                                    title: 'Oops...',\r\n                                    text: 'No se ha logrado traspasar los stocks',\r\n                                    footer: mensaje\r\n                                    })\r\n                                })\r\n                    }\r\n                })\r\n            }else{\r\n                this.alerta('danger', 'El stock actual para este producto en la bodega es 0')\r\n            }\r\n        },\r\n        //Función que permite actualizar el stock de un producto en la dirección Regional\r\n        recibirDireccion(codigoBarra, cantidad){\r\n            let config = {\r\n                headers: {\r\n                    token: this.token\r\n                }\r\n            }\r\n            this.axios.put(`api/actualizaStockmas/${codigoBarra}`, {cantidad: cantidad}, config)\r\n                    .then(res => {\r\n                        Swal.fire(\r\n                            'Se ha realizado un traspaso de stock a Dirección Regional',\r\n                            'Seleccione Ok para continuar',\r\n                            'success'\r\n                        )\r\n                        this.actualizarStocksProductoBodega(codigoBarra, cantidad)\r\n                    })\r\n                    .catch(e => {\r\n                        var mensaje = 'Posible error del sistema';\r\n                        Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: 'No se ha logrado recibir el stock en dirección regional',\r\n                        footer: mensaje\r\n                        })\r\n                    })\r\n        },\r\n        //Función que actualiza los stock en la vista de la página\r\n        actualizarStocksProductoBodega(codigoBarra, cantidad){\r\n            const index = this.enviar.findIndex(item => item.codigoBarra == codigoBarra);\r\n            this.enviar[index].stockBodega = this.enviar[index].stockBodega - parseInt(cantidad)\r\n            this.enviar[index].stock = this.enviar[index].stock + parseInt(cantidad)\r\n        },\r\n        //Funciones de las alertas\r\n        countDownChanged(dismissCountDown) {\r\n            this.dismissCountDown = dismissCountDown\r\n        },\r\n        showAlert() {\r\n            this.dismissCountDown = this.dismissSecs\r\n        },\r\n        alerta(color, texto){\r\n            this.mensaje.color = color;\r\n            this.mensaje.texto = texto;\r\n            this.showAlert();\r\n        },\r\n    },\r\n    async mounted(){\r\n      await $('#bodegas').DataTable()\r\n      await $('#ordenes').DataTable()\r\n      await $('#detalleOrden').DataTable()\r\n      await $('#enviar').DataTable()\r\n    },\r\n    watch: {\r\n      bodegas(val) {\r\n        if(this.pestaña === 'bodegas'){\r\n          $('#bodegas').DataTable().destroy();\r\n          this.$nextTick(()=> {\r\n            $('#bodegas').DataTable()\r\n          });\r\n        }\r\n      },\r\n      ordenes(val) {\r\n        if(this.pestaña === 'ordenes'){\r\n          $('#ordenes').DataTable().destroy();\r\n          this.$nextTick(()=> {\r\n            $('#ordenes').DataTable()\r\n          });\r\n        }\r\n      },\r\n      detalleOrden(val) {\r\n        if(this.pestaña === 'detalleOrden'){\r\n          $('#detalleOrden').DataTable().destroy();\r\n          this.$nextTick(()=> {\r\n            $('#detalleOrden').DataTable()\r\n          });\r\n        }\r\n      },\r\n      enviar(val) {\r\n        if(this.pestaña === 'enviar'){\r\n          $('#enviar').DataTable().destroy();\r\n          this.$nextTick(()=> {\r\n            $('#enviar').DataTable()\r\n          });\r\n        }\r\n      }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n    body{\r\n        background-color: #eee;\r\n    }\r\n\r\n    .texto{\r\n        text-align: center;\r\n    }\r\n\r\n    .imagen{\r\n        width: 50%;\r\n    }\r\n    .boton{\r\n        margin: 20px;\r\n        width: 90%;\r\n        border-radius: 12px !important;\r\n        border-color: black !important;\r\n    }\r\n</style>"]}]}