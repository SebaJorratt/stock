{"remainingRequest":"D:\\inventarioInformatico\\stock\\stock\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\inventarioInformatico\\stock\\stock\\src\\views\\productos.vue?vue&type=template&id=eab79e2e&","dependencies":[{"path":"D:\\inventarioInformatico\\stock\\stock\\src\\views\\productos.vue","mtime":1647625460372},{"path":"D:\\inventarioInformatico\\stock\\stock\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647002043141},{"path":"D:\\inventarioInformatico\\stock\\stock\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1645539061953},{"path":"D:\\inventarioInformatico\\stock\\stock\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647002043141},{"path":"D:\\inventarioInformatico\\stock\\stock\\node_modules\\vue-loader\\lib\\index.js","mtime":1645539059241}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}