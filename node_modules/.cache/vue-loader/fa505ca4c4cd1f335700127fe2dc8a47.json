{"remainingRequest":"D:\\inventarioInformatico\\inventario\\inventario\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\inventarioInformatico\\inventario\\inventario\\src\\components\\navbar.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\inventarioInformatico\\inventario\\inventario\\src\\components\\navbar.vue","mtime":1645467530597},{"path":"D:\\inventarioInformatico\\inventario\\inventario\\node_modules\\css-loader\\dist\\cjs.js","mtime":1644510056270},{"path":"D:\\inventarioInformatico\\inventario\\inventario\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1644510072741},{"path":"D:\\inventarioInformatico\\inventario\\inventario\\node_modules\\postcss-loader\\src\\index.js","mtime":1644510064515},{"path":"D:\\inventarioInformatico\\inventario\\inventario\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644510051457},{"path":"D:\\inventarioInformatico\\inventario\\inventario\\node_modules\\vue-loader\\lib\\index.js","mtime":1644510072741}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2Ryb3Bkb3duTWVudUJ1dHRvbjF7CiAgICBjb2xvcjogI0Y4RjhGRjsKfQoKLmljb25KdW5qaXsKICAgIHBhZGRpbmc6IDVweDsKICAgIAp9Cg=="},{"version":3,"sources":["navbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;;AAEA;AACA;;AAEA","file":"navbar.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"hello\"> \r\n        <div id=\"navegador\">\r\n            <b-navbar toggleable=\"md\" type=\"dark\" variant=\"danger\">\r\n                <b-container>\r\n                    <b-navbar-toggle target=\"nav-collapse\"></b-navbar-toggle>\r\n                    \r\n                    <router-link to=\"/menu\"> <img src=\"../assets/logoborde.png\" alt=\"\" width=\"50px\" class=\"iconJunji\">  <b-navbar-brand > Inventario |</b-navbar-brand></router-link> \r\n                     <b-collapse id=\"nav-collapse\" is-nav>\r\n                         <b-navbar-nav>\r\n                            <b-nav-item :to=\"{name:'equipos'}\" >Lista de equipos</b-nav-item>\r\n                            <b-nav-item :to=\"{name:'agregar'}\">Agregar Equipo</b-nav-item>\r\n                            <b-nav-item :to=\"{name:'funcionario'}\">Funcionarios</b-nav-item>\r\n                            <b-nav-item :to=\"{name:'dependencia'}\">Dependencia</b-nav-item>\r\n                        </b-navbar-nav>\r\n                        <b-navbar-nav class=\"ml-auto\">\r\n                            <b-nav-form>\r\n                                <div class=\"dropdown\">\r\n                                <button class=\"btn dropdown-toggle\" type=\"button\" style=\"border-color: black;\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    {{nombre}}\r\n                                </button>\r\n                                <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                                    <li><router-link to=\"/configuracion\"><a class=\"dropdown-item\" href=\"#\">Ver perfil</a></router-link> </li>\r\n                                    <li v-if=\"activo\"><router-link to=\"/agregaUsuario\"><a class=\"dropdown-item\" href=\"#\" >Gestión de Usuarios</a></router-link> </li>\r\n                                    <li><a @click=\"cerrarSesion()\" class=\"dropdown-item\" href=\"#\">Cerrar sesión</a></li>\r\n                                </ul>\r\n                                </div>\r\n                            </b-nav-form>\r\n                        </b-navbar-nav>\r\n                     </b-collapse>  \r\n                </b-container>\r\n            </b-navbar>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapState, mapGetters } from 'vuex'\r\nexport default {\r\n    name: \"navbar\",\r\n    methods:{\r\n        ...mapActions(['cerrarSesion']),\r\n        cargarUsuario(){\r\n        let config = {\r\n          headers: {\r\n            token: this.token\r\n          }\r\n        }\r\n        this.axios.get('auth/obtenerDatos', config)\r\n          .then(res => {\r\n            this.nombre = res.data[0].nomUsuario;\r\n          })\r\n        },\r\n        verificar(){\r\n            if(this.usuarioDB.data[0].tipoUsuario == 0){\r\n                this.activo = false;\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n      ...mapState(['token', 'usuarioDB']),\r\n    },\r\n    created(){\r\n      this.cargarUsuario();\r\n      this.verificar();\r\n    },\r\n    data() {\r\n      return {\r\n        nombre: '',\r\n        activo: true\r\n      }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n    #dropdownMenuButton1{\r\n        color: #F8F8FF;\r\n    }\r\n\r\n    .iconJunji{\r\n        padding: 5px;\r\n        \r\n    }\r\n</style>\r\n\r\n"]}]}